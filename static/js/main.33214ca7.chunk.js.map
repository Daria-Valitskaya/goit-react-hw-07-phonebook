{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","Components/Filter/Filter.module.css","Components/Section/Section.module.css","redux/Contacts/contacts-selectors.js","redux/Contacts/contacts-actions.js","redux/Contacts/contacts-operations.js","Components/ContactForm/ContactForm.js","Components/ContactItem/ContactItem.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","Components/Section/Section.js","App.js","redux/Contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["module","exports","getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","contact","name","includes","onChangeFilter","createAction","addContactRequest","addContactsSuccess","addContactsError","deleteContactRequest","deleteContactsSuccess","deleteContactsError","fetchContactsSuccess","fetchContactsError","fetchContactRequest","axios","defaults","baseURL","ContactForm","useState","setName","number","setNumber","dispatch","useDispatch","useSelector","handleInputChange","event","currentTarget","value","onAddContact","post","then","data","catch","error","addContact","reset","onSubmit","preventDefault","find","alert","className","s","input","type","onChange","pattern","title","required","ContactItem","id","onDeleteContact","onClick","ContactList","useEffect","get","delete","deleteContact","map","Filter","label","Section","children","container","App","createReducer","_","payload","action","loading","combineReducers","persistedReducer","contactReducers","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.33214ca7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContactForm_input__1jw1x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__Y1GlU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__yIbma\"};","import { createSelector } from \"@reduxjs/toolkit\";\r\nexport const getContacts = (state) => state.contacts.items;\r\nexport const getFilter = (state) => state.contacts.filter;\r\n\r\n// export const getVisibleContacts = (state) => {\r\n//   const contacts = getContacts(state);\r\n//   const filter = getFilter(state);\r\n\r\n//   const filteredVisibleContacts = () => {\r\n//     const normalizedFilter = filter.toLowerCase();\r\n//     return contacts.filter((contact) =>\r\n//       contact.name.toLowerCase().includes(normalizedFilter)\r\n//     );\r\n//   };\r\n\r\n//   return filteredVisibleContacts(contacts);\r\n// };\r\n\r\nexport const getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n);\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst onChangeFilter = createAction(\"contacts/Filter\");\r\n\r\nconst addContactRequest = createAction(\"contacts/addContactRequest\");\r\nconst addContactsSuccess = createAction(\"contacts/addContactsSuccess\");\r\nconst addContactsError = createAction(\"contacts/addContactsError\");\r\n\r\nconst deleteContactRequest = createAction(\"contacts/deleteContactRequest\");\r\nconst deleteContactsSuccess = createAction(\"contacts/deleteContactsSuccess\");\r\nconst deleteContactsError = createAction(\"contacts/deleteContactsError\");\r\n\r\nconst fetchContactsSuccess = createAction(\"contacts/fetchContactsSuccess\");\r\nconst fetchContactsError = createAction(\"contacts/fetchContactsError\");\r\nconst fetchContactRequest = createAction(\"contacts/fetchContactRequest\");\r\n\r\nexport {\r\n  addContactRequest,\r\n  addContactsSuccess,\r\n  addContactsError,\r\n  deleteContactsSuccess,\r\n  deleteContactRequest,\r\n  deleteContactsError,\r\n  fetchContactRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  onChangeFilter,\r\n};\r\n","import axios from \"axios\";\r\nimport {\r\n  addContactRequest,\r\n  addContactsSuccess,\r\n  addContactsError,\r\n  deleteContactsSuccess,\r\n  deleteContactRequest,\r\n  deleteContactsError,\r\n  fetchContactRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n} from \"./contacts-actions\";\r\naxios.defaults.baseURL = \" http://localhost:4000\";\r\n\r\nconst addContact = (name, number) => (dispatch) => {\r\n  const contact = { name, number };\r\n  dispatch(addContactRequest());\r\n  axios\r\n    .post(\"/contacts\", contact)\r\n    .then(({ data }) => dispatch(addContactsSuccess(data)))\r\n    .catch((error) => dispatch(addContactsError(error)));\r\n};\r\n\r\nconst deleteContact = (id) => (dispatch) => {\r\n  dispatch(deleteContactRequest());\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactsSuccess(id)))\r\n    .catch((error) => dispatch(deleteContactsError(error)));\r\n};\r\n\r\nconst fetchContact = () => (dispatch) => {\r\n  dispatch(fetchContactRequest());\r\n  axios\r\n    .get(\"/contacts\")\r\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n    .catch((error) => dispatch(fetchContactsError(error)));\r\n};\r\n\r\nexport { addContact, deleteContact, fetchContact };\r\n","import { useState } from \"react\";\nimport { getContacts } from \"../../redux/Contacts/contacts-selectors\";\n\nimport s from \"./ContactForm.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addContact } from \"../../redux/Contacts/contacts-operations\";\nfunction ContactForm() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const handleInputChange = (event) => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const onAddContact = (name, number) => dispatch(addContact(name, number));\n  const handleSubmitForm = (event) => {\n    event.preventDefault();\n    if (\n      contacts.find(\n        (contact) => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      alert(`${name} is already in contacts.`);\n      reset();\n      return;\n    }\n    onAddContact(name, number);\n    reset();\n  };\n  const reset = () => {\n    setNumber(\"\");\n    setName(\"\");\n  };\n  return (\n    <form onSubmit={handleSubmitForm}>\n      <label>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleInputChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n\n      <label>\n        Number\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleInputChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n}\nexport default ContactForm;\n","// import PropTypes from \"prop-types\";\n\nconst ContactItem = ({ id, number, name, onDeleteContact }) => {\n  return (\n    <>\n      <p>\n        {name}: {number}\n      </p>\n      <button type=\"button\" onClick={() => onDeleteContact(id)}>\n        Delete\n      </button>\n    </>\n  );\n};\n\n// ContactItem.propTypes = {\n//   id: PropTypes.string.isRequired,\n//   name: PropTypes.string.isRequired,\n//   number: PropTypes.string.isRequired,\n//   deleteContact: PropTypes.func.isRequired,\n// };\n\nexport default ContactItem;\n","import PropTypes from \"prop-types\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport ContactItem from \"../ContactItem/ContactItem\";\nimport {\n  deleteContact,\n  fetchContact,\n} from \"../../redux/Contacts/contacts-operations\";\nimport { getVisibleContacts } from \"../../redux/Contacts/contacts-selectors\";\nimport { useEffect } from \"react\";\n\nconst ContactList = () => {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n  useEffect(() => dispatch(fetchContact()), [dispatch]);\n  const onDeleteContact = (id) => dispatch(deleteContact(id));\n  return (\n    <ul>\n      {contacts.map(({ id, number, name }) => (\n        <li key={id} name={name}>\n          <ContactItem\n            id={id}\n            name={name}\n            number={number}\n            onDeleteContact={onDeleteContact}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default ContactList;\n","import PropTypes from \"prop-types\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { onChangeFilter } from \"../../redux/Contacts/contacts-actions\";\nimport s from \"./Filter.module.css\";\nimport { getFilter } from \"../../redux/Contacts/contacts-selectors\";\nconst Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        className={s.input}\n        type=\"text\"\n        value={value}\n        onChange={(event) =>\n          dispatch(onChangeFilter(event.currentTarget.value))\n        }\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n};\n\nexport default Filter;\n","import PropTypes from \"prop-types\";\nimport s from \"./Section.module.css\";\n\nexport default function Section({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nSection.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import ContactForm from \"./Components/ContactForm/ContactForm\";\nimport ContactList from \"./Components/ContactList/ContactList\";\nimport Filter from \"./Components/Filter/Filter\";\nimport Section from \"./Components/Section/Section\";\n\nexport default function App() {\n  return (\n    <div>\n      <Section>\n        <h1>Phonebook</h1>\n        <ContactForm />\n      </Section>\n      <Section>\n        <h2>My Contacts </h2>\n        <Filter />\n      </Section>\n      <Section>\n        <ContactList />\n      </Section>\n    </div>\n  );\n}\n","import { combineReducers } from \"redux\";\r\n// import types from \"./contacts-types\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n// import { addContact, deleteContact, fetchContact } from \"./contacts-operations\";\r\nimport {\r\n  addContactRequest,\r\n  addContactsSuccess,\r\n  addContactsError,\r\n  deleteContactsSuccess,\r\n  deleteContactRequest,\r\n  deleteContactsError,\r\n  fetchContactRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  onChangeFilter,\r\n} from \"./contacts-actions\";\r\nconst items = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactsSuccess]: (state, action) => [...state, action.payload],\r\n  [deleteContactsSuccess]: (state, action) =>\r\n    state.filter((contact) => contact.id !== action.payload),\r\n});\r\nconst filter = createReducer(\"\", {\r\n  [onChangeFilter]: (_, action) => action.payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [addContactRequest]: () => true,\r\n  [addContactsSuccess]: () => false,\r\n  [addContactsError]: () => false,\r\n  [deleteContactsSuccess]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactsError]: () => false,\r\n  [fetchContactRequest]: () => true,\r\n  [fetchContactsError]: () => false,\r\n  [fetchContactsSuccess]: () => false,\r\n});\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n});\r\n","import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\r\nimport {\r\n  // persistStore,\r\n  // persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport contactReducers from \"./Contacts/contacts-reducer\";\r\nimport logger from \"redux-logger\";\r\n// import storage from \"redux-persist/lib/storage\";\r\n\r\n// const persistConfig = {\r\n//   key: \"root\",\r\n//   storage,\r\n// };\r\n\r\nconst persistedReducer =\r\n  // persistConfig,\r\n  combineReducers({ contacts: contactReducers });\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }).concat(logger),\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n// const persistor = persistStore(store);\r\nexport { store };\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\n// import { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}